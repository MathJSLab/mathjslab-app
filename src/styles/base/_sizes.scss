/**
 * _sizes.scss - Size definitions.
 */
// The generated sizes map.
$generated-sizes: ();

// Map of size names and specifications.
$sizes-spec: (
    spacing-unit: (
        /* Spacing scale */ base: 1rem,
        x-small: 0.3,
        small: 0.5,
        large: 2,
        x-large: 3,
    ),
    font-size: (
        /* Font sizes */ base: 1rem,
        x-small: 0.65,
        small: 0.875,
        large: 1.25,
        x-large: 2.5,
    ),
    math-font-size: (
        /* Math font sizes */ base: 20px,
        x-small: 0.65,
        small: 0.875,
        large: 1.25,
        x-large: 2.5,
    ),
    border-radius: (
        /* Border radius */ base: 4px,
        x-small: 0.3,
        small: 0.5,
        large: 2,
        x-large: 3,
    ),
    min-width: (
        /* Minimal width for large visualization */ base: 1024px,
        x-small: 0.5,
        small: 0.75,
        large: 1.25,
        x-large: 1.5,
    ),
);

@mixin generate-sizes($size-name, $size-spec) {
    // Generate the colors for each variation.
    $generated-map: (
        '#{$size-name}': map-get($size-spec, base),
        '#{$size-name}-base': map-get($size-spec, base),
        '#{$size-name}-x-small': map-get($size-spec, base) * map-get($size-spec, x-small),
        '#{$size-name}-small': map-get($size-spec, base) * map-get($size-spec, small),
        '#{$size-name}-medium': map-get($size-spec, base),
        '#{$size-name}-large': map-get($size-spec, base) * map-get($size-spec, large),
        '#{$size-name}-x-large': map-get($size-spec, base) * map-get($size-spec, x-large),
    );
    // Store the $generated-map in the global $generated-colors map.
    $generated-sizes: map-merge($generated-sizes, $generated-map) !global;
}

// Iterate over the $sizes-spec map generating size values in the global $generated-sizes map.
@each $size-name, $size-spec in $sizes-spec {
    @include generate-sizes($size-name, $size-spec);
}
